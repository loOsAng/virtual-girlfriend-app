spring.application.name=virtual-girlfriend-app
server.port=8080
//配置API
deepseek.api.key=your_api_key_here
deepseek.api.endpoint=https://api.deepseek.com/v1/chat/completions


# MySQL DataSource Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/virtual_girlfriend_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true

spring.datasource.username=root
# 替换为你的MySQL用户名 (例如，如果你的MySQL用户名真的是 'root')

spring.datasource.password=your_db_password_here
# 替换为你的MySQL密码

# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver # Spring Boot通常能自动检测

# JPA/Hibernate Configuration for MySQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# spring.jpa.hibernate.ddl-auto:
#   validate: 校验表结构是否匹配，不匹配则报错 (生产推荐)
#   update:   如果表结构不匹配，Hibernate会尝试更新它 (开发时方便，但要小心数据丢失风险)
#   create:   每次启动都删除并重新创建表 (数据会丢失，适合测试)
#   create-drop: 启动时创建，关闭时删除 (适合测试)
#   none:     不进行任何操作
spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=true
# 在控制台显示执行的SQL语句，方便调试

# 可选: 格式化SQL输出
# spring.jpa.properties.hibernate.format_sql=true